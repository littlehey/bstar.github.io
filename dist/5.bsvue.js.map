{"version":3,"sources":["webpack:///./docs/md/tree.md","webpack:///./docs/md/tree.md?c4ee","webpack:///./docs/md/tree.md?eaa2","webpack:///./docs/md/tree.md?88f6","webpack:///docs/md/tree.vue","webpack:///./docs/md/tree.md?a33c"],"names":[],"mappings":"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;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D,0BAA0B,sCAAsC;AAChE,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB,MAAM,wBAAwB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,kBAAkB,SAAS,sCAAsC,EAAE;AACnE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,wBAAwB,oDAAoD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,wBAAwB,oDAAoD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,wBAAwB,oDAAowBAAwB,oDAAoD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,wBAAwB,oDAAoD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"5.bsvue.js","sourcesContent":["module.exports = require(\"!!vue-loader!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tree.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/md/tree.md\n// module id = 594\n// module chunks = 5","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.trees[data-v-0d67bba6] {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n.tree-box[data-v-0d67bba6] {\\n  width: 500px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"D:/bsvue/docs/md/docs/md/tree.vue?d530e876\"],\"names\":[],\"mappings\":\";AAqNA;EACA,cAAA;EACA,+BAAA;CACA;AAEA;EACA,aAAA;CACA\",\"file\":\"tree.md\",\"sourcesContent\":[\"<template><section><h1>描述</h1>\\n<p>提供了树组件，可以在节点上增加图标</p>\\n<h1>效果展示</h1>\\n<template>\\n  <div id=\\\"vtree-demo\\\">\\n    <div class=\\\"trees\\\">\\n      <div class=\\\"tree-box\\\">\\n        <bs-tree v-model=\\\"checkedItem\\\" :treeData=\\\"treeData1\\\" :renderTitle=\\\"renderTitle\\\" :isDrag=\\\"isDrag\\\" @node-dblclick=\\\"dblclick\\\">\\n      </bs-tree></div>\\n      <div class=\\\"tree-box\\\">\\n        <input type=\\\"text\\\" v-model=\\\"searchval\\\" placeholder=\\\"请输入...\\\" style=\\\"border:1px solid #999;\\\">\\n        <bs-tree :treeData=\\\"treeData2\\\" ref=\\\"tree\\\" :multiple=\\\"true\\\" :renderBtn=\\\"renderBtn\\\">\\n      </bs-tree></div>\\n    </div>\\n    <div @click=\\\"getChecked\\\">getChecked</div>\\n    <div>checkedItem：{{checkedItem}}</div>\\n    <div style=\\\"width:200px;height:100px;border:1px solid #ccc;\\\" @dragover.prevent.stop=\\\"\\\" @drop.prevent.stop=\\\"handleDrop\\\">{{dragItem}}</div>\\n  </div>\\n</template>\\n\\n\\n<h1>代码示例</h1>\\n<pre v-pre=\\\"\\\"><code v-pre=\\\"\\\" class=\\\"language-html\\\">\\n\\n</code></pre>\\n<h1>props</h1>\\n<table class=\\\"table table-striped table-bordered\\\"><thead>\\n<tr>\\n<th>属性名称</th>\\n<th>描述</th>\\n<th>类型</th>\\n<th>默认值</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>treeData</td>\\n<td>组件接受的树形数据</td>\\n<td>Array</td>\\n<td>[]</td>\\n</tr>\\n<tr>\\n<td>multiple</td>\\n<td>是否多选模式</td>\\n<td>Boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>isDrag</td>\\n<td>是否可以拖拽</td>\\n<td>Function</td>\\n<td>(item) =&gt; false；(item当前节点对象)</td>\\n</tr>\\n<tr>\\n<td>renderTitle</td>\\n<td>自定义标题显示内容, 可以在标题前添加图标</td>\\n<td>Function</td>\\n<td>显示标题</td>\\n</tr>\\n<tr>\\n<td>renderBtn</td>\\n<td>自定义节点右侧按钮</td>\\n<td>Function</td>\\n<td>无</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>注:</strong><br>\\n<code v-pre=\\\"\\\">renderTitle</code>, <code v-pre=\\\"\\\">renderBtn</code>是通过render函数渲染, 其第二个参数有两个字段item(当前的节点)、index(当前节点的索引值)<br>\\n节点的高亮需求可以通过<code v-pre=\\\"\\\">renderTitle</code>来处理<br>\\n节点的右侧控制按钮图标可以通过<code v-pre=\\\"\\\">renderBtn</code>来处理<br></p>\\n<h1>tree属性</h1>\\n<table class=\\\"table table-striped table-bordered\\\"><thead>\\n<tr>\\n<th>属性名称</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>v-model</td>\\n<td>当前选中的节点</td>\\n</tr>\\n</tbody>\\n</table>\\n<h1>treeData结构</h1>\\n<table class=\\\"table table-striped table-bordered\\\"><thead>\\n<tr>\\n<th>参数</th>\\n<th>说明</th>\\n<th>类型</th>\\n<th>可选值</th>\\n<th>默认值</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>节点id</td>\\n<td>String</td>\\n<td>N</td>\\n<td>—</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>节点名称</td>\\n<td>String</td>\\n<td>N</td>\\n<td>—</td>\\n</tr>\\n<tr>\\n<td>open</td>\\n<td>节点是否展开(可以通过addAttr方法添加)</td>\\n<td>Boolean</td>\\n<td>Y</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>checked</td>\\n<td>节点复选框是否选中(可以通过addAttr方法添加)</td>\\n<td>Boolean</td>\\n<td>Y</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>visible</td>\\n<td>节点是否可见(可以通过addAttr方法添加)</td>\\n<td>Boolean</td>\\n<td>Y</td>\\n<td>true</td>\\n</tr>\\n<tr>\\n<td>selected</td>\\n<td>节点是否被选中(可以通过addAttr方法添加)</td>\\n<td>Boolean</td>\\n<td>Y</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>pid</td>\\n<td>节点父id(可以通过addPid方法添加)</td>\\n<td>Boolean</td>\\n<td>Y</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>children</td>\\n<td>子节点</td>\\n<td>Array[Object]</td>\\n<td>Y</td>\\n<td>—</td>\\n</tr>\\n</tbody>\\n</table>\\n<h1>events</h1>\\n<table class=\\\"table table-striped table-bordered\\\"><thead>\\n<tr>\\n<th>事件名称</th>\\n<th>描述</th>\\n<th>参数</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>select-change</td>\\n<td>选中的值发生改变</td>\\n<td>args1:树形选中数据，完整上下级,args2:数组型选中数据，只有最底级的数据</td>\\n</tr>\\n<tr>\\n<td>node-dblclick</td>\\n<td>节点双击事件</td>\\n<td>当前节点</td>\\n</tr>\\n</tbody>\\n</table>\\n<h1>methods</h1>\\n<table class=\\\"table table-striped table-bordered\\\"><thead>\\n<tr>\\n<th>方法名称</th>\\n<th>描述</th>\\n<th>参数</th>\\n<th>返回值</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>getNodes</td>\\n<td>通过属性查找节点</td>\\n<td>①查找条件②treeData(可选)</td>\\n<td>符合条件的节点组</td>\\n</tr>\\n<tr>\\n<td>searchNodes</td>\\n<td>搜索,过滤treeData</td>\\n<td>①过滤条件②treeData(可选)</td>\\n<td>无</td>\\n</tr>\\n<tr>\\n<td>addAttr</td>\\n<td>给treeData添加属性</td>\\n<td>①treeData②属性</td>\\n<td>无</td>\\n</tr>\\n<tr>\\n<td>addPid</td>\\n<td>给treeData添加pid</td>\\n<td>①treeData②根节点的pid(默认0)</td>\\n<td>无</td>\\n</tr>\\n</tbody>\\n</table>\\n</section></template>\\n<style scoped>\\n.trees {\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.tree-box {\\n  width: 500px;\\n}\\n</style>\\n<script>\\nexport default {\\n  name: 'Tree-demo',\\n  data() {\\n    return {\\n      checkedItem: {},\\n      dragItem: {},\\n      treeData1: [\\n        {\\n          id: 1,\\n          title: '一级-01',\\n          type: 1,\\n          children: [\\n            {\\n              id: 2,\\n              title: '二级-01',\\n              type: 1,\\n              children: [\\n                {\\n                  id: 3,\\n                  title: '三级-01',\\n                  type: 1\\n                }\\n              ]\\n            },\\n            {\\n              id: 4,\\n              title: '二级-02',\\n              type: 1\\n            }\\n          ]\\n        }\\n      ],\\n      treeData2: [\\n        {\\n          id: 1,\\n          title: '一级-01',\\n          type: 1,\\n          pid: 0,\\n          children: [\\n            {\\n              id: 2,\\n              title: '二级-01',\\n              type: 1,\\n              children: [\\n                {\\n                  id: 3,\\n                  title: '三级-01',\\n                  type: 1,\\n                  children: [\\n                    {\\n                      id: 31,\\n                      title: '四级-01',\\n                      type: 1\\n                    },\\n                    {\\n                      id: 32,\\n                      title: '四级-02',\\n                      type: 1\\n                    }\\n                  ]\\n                }\\n              ]\\n            },\\n            {\\n              id: 4,\\n              title: '二级-02',\\n              type: 1\\n            }\\n          ]\\n        }\\n      ],\\n      searchval: '',\\n      renderTitle: (h, ctx) => {\\n        return h('div', {\\n          class: {'searched': ctx.item.searched}\\n        }, '#' + ctx.item.title)\\n      },\\n      renderBtn: (h, {item, index}) => {\\n        if (!item.children) {\\n          return h('div', {\\n            class: {'item-right': true}\\n          }, [\\n            h('span', {\\n              on: {\\n                click: () => { this.print(item) }\\n              }\\n            }, '删除'),\\n            h('span', {\\n              on: {\\n                click: () => { this.alert(item) }\\n              }\\n            }, '打印')\\n          ])\\n        }\\n      },\\n      isDrag: (item) => {\\n        return !item.children\\n      }\\n    }\\n  },\\n  computed: {\\n  },\\n  watch: {\\n    searchval(val) {\\n      this.$refs.tree.searchNodes(val,this.treeData2)\\n      if (val === '') {\\n        this.$refs.tree.addAttr (this.treeData2, {open: false})\\n      }\\n    }\\n  },\\n  methods: {\\n    getChecked() {\\n      const answer2 = this.$refs.tree.getChecked({hasHalf: false})\\n      console.log('tree getChecked ans', answer2)\\n    },\\n    print(target) {\\n      console.log('你点击的是：', target)\\n    },\\n    alert(target) {\\n      alert('你点击的是：' + target.title)\\n    },\\n    dblclick(node) {\\n      console.log(node)\\n    },\\n    handleDrop(e) {\\n      this.dragItem = e.dataTransfer.getData('Text')\\n    }\\n  },\\n  mounted() {\\n    let attr = {\\n      open: false,\\n      checked: false,\\n      searched: false,\\n      visible: true\\n    }\\n    \\n    this.$refs.tree.addAttr (this.treeData1, attr)\\n    this.$refs.tree.addAttr (this.treeData2, attr)\\n\\n    this.$refs.tree.addPid (this.treeData2)\\n  }\\n}\\n</script>\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0d67bba6\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0&bustCache!./node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./docs/md/tree.md\n// module id = 609\n// module chunks = 5","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0d67bba6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0&bustCache!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tree.md\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0&bustCache!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tree.md\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0d67bba6\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0&bustCache!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tree.md\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0d67bba6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"docs\\\\md\\\\tree.md\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {  console.error(\"named exports are not supported in *.vue files.\")}\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-0d67bba6\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-0d67bba6\", Component.options)\n' + '  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader!./node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./docs/md/tree.md\n// module id = 646\n// module chunks = 5","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0d67bba6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0&bustCache!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tree.md\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"51207cda\", content, false);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0d67bba6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0&bustCache!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tree.md\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0d67bba6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0&bustCache!../../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tree.md\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0d67bba6\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0&bustCache!./node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./docs/md/tree.md\n// module id = 647\n// module chunks = 5","<template><section><h1>描述</h1>\n<p>提供了树组件，可以在节点上增加图标</p>\n<h1>效果展示</h1>\n<template>\n  <div id=\"vtree-demo\">\n    <div class=\"trees\">\n      <div class=\"tree-box\">\n        <bs-tree v-model=\"checkedItem\" :treeData=\"treeData1\" :renderTitle=\"renderTitle\" :isDrag=\"isDrag\" @node-dblclick=\"dblclick\">\n      </bs-tree></div>\n      <div class=\"tree-box\">\n        <input type=\"text\" v-model=\"searchval\" placeholder=\"请输入...\" style=\"border:1px solid #999;\">\n        <bs-tree :treeData=\"treeData2\" ref=\"tree\" :multiple=\"true\" :renderBtn=\"renderBtn\">\n      </bs-tree></div>\n    </div>\n    <div @click=\"getChecked\">getChecked</div>\n    <div>checkedItem：{{checkedItem}}</div>\n    <div style=\"width:200px;height:100px;border:1px solid #ccc;\" @dragover.prevent.stop=\"\" @drop.prevent.stop=\"handleDrop\">{{dragItem}}</div>\n  </div>\n</template>\n\n\n<h1>代码示例</h1>\n<pre v-pre=\"\"><code v-pre=\"\" class=\"language-html\">\n\n</code></pre>\n<h1>props</h1>\n<table class=\"table table-striped table-bordered\"><thead>\n<tr>\n<th>属性名称</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>treeData</td>\n<td>组件接受的树形数据</td>\n<td>Array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>multiple</td>\n<td>是否多选模式</td>\n<td>Boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>isDrag</td>\n<td>是否可以拖拽</td>\n<td>Function</td>\n<td>(item) =&gt; false；(item当前节点对象)</td>\n</tr>\n<tr>\n<td>renderTitle</td>\n<td>自定义标题显示内容, 可以在标题前添加图标</td>\n<td>Function</td>\n<td>显示标题</td>\n</tr>\n<tr>\n<td>renderBtn</td>\n<td>自定义节点右侧按钮</td>\n<td>Function</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<p><strong>注:</strong><br>\n<code v-pre=\"\">renderTitle</code>, <code v-pre=\"\">renderBtn</code>是通过render函数渲染, 其第二个参数有两个字段item(当前的节点)、index(当前节点的索引值)<br>\n节点的高亮需求可以通过<code v-pre=\"\">renderTitle</code>来处理<br>\n节点的右侧控制按钮图标可以通过<code v-pre=\"\">renderBtn</code>来处理<br></p>\n<h1>tree属性</h1>\n<table class=\"table table-striped table-bordered\"><thead>\n<tr>\n<th>属性名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-model</td>\n<td>当前选中的节点</td>\n</tr>\n</tbody>\n</table>\n<h1>treeData结构</h1>\n<table class=\"table table-striped table-bordered\"><thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>节点id</td>\n<td>String</td>\n<td>N</td>\n<td>—</td>\n</tr>\n<tr>\n<td>title</td>\n<td>节点名称</td>\n<td>String</td>\n<td>N</td>\n<td>—</td>\n</tr>\n<tr>\n<td>open</td>\n<td>节点是否展开(可以通过addAttr方法添加)</td>\n<td>Boolean</td>\n<td>Y</td>\n<td>false</td>\n</tr>\n<tr>\n<td>checked</td>\n<td>节点复选框是否选中(可以通过addAttr方法添加)</td>\n<td>Boolean</td>\n<td>Y</td>\n<td>false</td>\n</tr>\n<tr>\n<td>visible</td>\n<td>节点是否可见(可以通过addAttr方法添加)</td>\n<td>Boolean</td>\n<td>Y</td>\n<td>true</td>\n</tr>\n<tr>\n<td>selected</td>\n<td>节点是否被选中(可以通过addAttr方法添加)</td>\n<td>Boolean</td>\n<td>Y</td>\n<td>false</td>\n</tr>\n<tr>\n<td>pid</td>\n<td>节点父id(可以通过addPid方法添加)</td>\n<td>Boolean</td>\n<td>Y</td>\n<td>false</td>\n</tr>\n<tr>\n<td>children</td>\n<td>子节点</td>\n<td>Array[Object]</td>\n<td>Y</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<h1>events</h1>\n<table class=\"table table-striped table-bordered\"><thead>\n<tr>\n<th>事件名称</th>\n<th>描述</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>select-change</td>\n<td>选中的值发生改变</td>\n<td>args1:树形选中数据，完整上下级,args2:数组型选中数据，只有最底级的数据</td>\n</tr>\n<tr>\n<td>node-dblclick</td>\n<td>节点双击事件</td>\n<td>当前节点</td>\n</tr>\n</tbody>\n</table>\n<h1>methods</h1>\n<table class=\"table table-striped table-bordered\"><thead>\n<tr>\n<th>方法名称</th>\n<th>描述</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getNodes</td>\n<td>通过属性查找节点</td>\n<td>①查找条件②treeData(可选)</td>\n<td>符合条件的节点组</td>\n</tr>\n<tr>\n<td>searchNodes</td>\n<td>搜索,过滤treeData</td>\n<td>①过滤条件②treeData(可选)</td>\n<td>无</td>\n</tr>\n<tr>\n<td>addAttr</td>\n<td>给treeData添加属性</td>\n<td>①treeData②属性</td>\n<td>无</td>\n</tr>\n<tr>\n<td>addPid</td>\n<td>给treeData添加pid</td>\n<td>①treeData②根节点的pid(默认0)</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n</section></template>\n<style scoped>\n.trees {\n  display: flex;\n  justify-content: space-between;\n}\n\n.tree-box {\n  width: 500px;\n}\n</style>\n<script>\nexport default {\n  name: 'Tree-demo',\n  data() {\n    return {\n      checkedItem: {},\n      dragItem: {},\n      treeData1: [\n        {\n          id: 1,\n          title: '一级-01',\n          type: 1,\n          children: [\n            {\n              id: 2,\n              title: '二级-01',\n              type: 1,\n              children: [\n                {\n                  id: 3,\n                  title: '三级-01',\n                  type: 1\n                }\n              ]\n            },\n            {\n              id: 4,\n              title: '二级-02',\n              type: 1\n            }\n          ]\n        }\n      ],\n      treeData2: [\n        {\n          id: 1,\n          title: '一级-01',\n          type: 1,\n          pid: 0,\n          children: [\n            {\n              id: 2,\n              title: '二级-01',\n              type: 1,\n              children: [\n                {\n                  id: 3,\n                  title: '三级-01',\n                  type: 1,\n                  children: [\n                    {\n                      id: 31,\n                      title: '四级-01',\n                      type: 1\n                    },\n                    {\n                      id: 32,\n                      title: '四级-02',\n                      type: 1\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              id: 4,\n              title: '二级-02',\n              type: 1\n            }\n          ]\n        }\n      ],\n      searchval: '',\n      renderTitle: (h, ctx) => {\n        return h('div', {\n          class: {'searched': ctx.item.searched}\n        }, '#' + ctx.item.title)\n      },\n      renderBtn: (h, {item, index}) => {\n        if (!item.children) {\n          return h('div', {\n            class: {'item-right': true}\n          }, [\n            h('span', {\n              on: {\n                click: () => { this.print(item) }\n              }\n            }, '删除'),\n            h('span', {\n              on: {\n                click: () => { this.alert(item) }\n              }\n            }, '打印')\n          ])\n        }\n      },\n      isDrag: (item) => {\n        return !item.children\n      }\n    }\n  },\n  computed: {\n  },\n  watch: {\n    searchval(val) {\n      this.$refs.tree.searchNodes(val,this.treeData2)\n      if (val === '') {\n        this.$refs.tree.addAttr (this.treeData2, {open: false})\n      }\n    }\n  },\n  methods: {\n    getChecked() {\n      const answer2 = this.$refs.tree.getChecked({hasHalf: false})\n      console.log('tree getChecked ans', answer2)\n    },\n    print(target) {\n      console.log('你点击的是：', target)\n    },\n    alert(target) {\n      alert('你点击的是：' + target.title)\n    },\n    dblclick(node) {\n      console.log(node)\n    },\n    handleDrop(e) {\n      this.dragItem = e.dataTransfer.getData('Text')\n    }\n  },\n  mounted() {\n    let attr = {\n      open: false,\n      checked: false,\n      searched: false,\n      visible: true\n    }\n    \n    this.$refs.tree.addAttr (this.treeData1, attr)\n    this.$refs.tree.addAttr (this.treeData2, attr)\n\n    this.$refs.tree.addPid (this.treeData2)\n  }\n}\n</script>\n\n\n// WEBPACK FOOTER //\n// docs/md/tree.vue?d530e876","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"section\",\n    [\n      _c(\"h1\", [_vm._v(\"描述\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"提供了树组件，可以在节点上增加图标\")]),\n      _vm._v(\" \"),\n      _c(\"h1\", [_vm._v(\"效果展示\")]),\n      _vm._v(\" \"),\n      [\n        _c(\"div\", { attrs: { id: \"vtree-demo\" } }, [\n          _c(\"div\", { staticClass: \"trees\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"tree-box\" },\n              [\n                _c(\"bs-tree\", {\n                  attrs: {\n                    treeData: _vm.treeData1,\n                    renderTitle: _vm.renderTitle,\n                    isDrag: _vm.isDrag\n                  },\n                  on: { \"node-dblclick\": _vm.dblclick },\n                  model: {\n                    value: _vm.checkedItem,\n                    callback: function($$v) {\n                      _vm.checkedItem = $$v\n                    },\n                    expression: \"checkedItem\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"tree-box\" },\n              [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.searchval,\n                      expression: \"searchval\"\n                    }\n                  ],\n                  staticStyle: { border: \"1px solid #999\" },\n                  attrs: { type: \"text\", placeholder: \"请输入...\" },\n                  domProps: { value: _vm.searchval },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.searchval = $event.target.value\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"bs-tree\", {\n                  ref: \"tree\",\n                  attrs: {\n                    treeData: _vm.treeData2,\n                    multiple: true,\n                    renderBtn: _vm.renderBtn\n                  }\n                })\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { on: { click: _vm.getChecked } }, [_vm._v(\"getChecked\")]),\n          _vm._v(\" \"),\n          _c(\"div\", [_vm._v(\"checkedItem：\" + _vm._s(_vm.checkedItem))]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticStyle: {\n                width: \"200px\",\n                height: \"100px\",\n                border: \"1px solid #ccc\"\n              },\n              on: {\n                dragover: function($event) {\n                  $event.preventDefault()\n                  $event.stopPropagation()\n                },\n                drop: function($event) {\n                  $event.preventDefault()\n                  $event.stopPropagation()\n                  _vm.handleDrop($event)\n                }\n              }\n            },\n            [_vm._v(_vm._s(_vm.dragItem))]\n          )\n        ])\n      ],\n      _vm._v(\" \"),\n      _c(\"h1\", [_vm._v(\"代码示例\")]),\n      _vm._v(\" \"),\n      _vm._m(0),\n      _vm._v(\" \"),\n      _c(\"h1\", [_vm._v(\"props\")]),\n      _vm._v(\" \"),\n      _vm._m(1),\n      _vm._v(\" \"),\n      _vm._m(2),\n      _vm._v(\" \"),\n      _c(\"h1\", [_vm._v(\"tree属性\")]),\n      _vm._v(\" \"),\n      _vm._m(3),\n      _vm._v(\" \"),\n      _c(\"h1\", [_vm._v(\"treeData结构\")]),\n      _vm._v(\" \"),\n      _vm._m(4),\n      _vm._v(\" \"),\n      _c(\"h1\", [_vm._v(\"events\")]),\n      _vm._v(\" \"),\n      _vm._m(5),\n      _vm._v(\" \"),\n      _c(\"h1\", [_vm._v(\"methods\")]),\n      _vm._v(\" \"),\n      _vm._m(6)\n    ],\n    2\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"pre\", { pre: true }, [\n      _c(\"code\", { attrs: { \"v-pre\": \"\", class: \"language-html\" } }, [\n        _vm._v(\"\\n\\n\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", { staticClass: \"table table-striped table-bordered\" }, [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"属性名称\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"描述\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"类型\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"默认值\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"treeData\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"组件接受的树形数据\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Array\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"[]\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"multiple\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"是否多选模式\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Boolean\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"false\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"isDrag\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"是否可以拖拽\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Function\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"(item) => false；(item当前节点对象)\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"renderTitle\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"自定义标题显示内容, 可以在标题前添加图标\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Function\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"显示标题\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"renderBtn\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"自定义节点右侧按钮\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Function\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"无\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"注:\")]),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\"code\", { pre: true }, [_vm._v(\"renderTitle\")]),\n      _vm._v(\", \"),\n      _c(\"code\", { pre: true }, [_vm._v(\"renderBtn\")]),\n      _vm._v(\n        \"是通过render函数渲染, 其第二个参数有两个字段item(当前的节点)、index(当前节点的索引值)\"\n      ),\n      _c(\"br\"),\n      _vm._v(\"\\n节点的高亮需求可以通过\"),\n      _c(\"code\", { pre: true }, [_vm._v(\"renderTitle\")]),\n      _vm._v(\"来处理\"),\n      _c(\"br\"),\n      _vm._v(\"\\n节点的右侧控制按钮图标可以通过\"),\n      _c(\"code\", { pre: true }, [_vm._v(\"renderBtn\")]),\n      _vm._v(\"来处理\"),\n      _c(\"br\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", { staticClass: \"table table-striped table-bordered\" }, [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"属性名称\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"描述\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"v-model\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"当前选中的节点\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", { staticClass: \"table table-striped table-bordered\" }, [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"参数\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"说明\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"类型\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"可选值\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"默认值\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"id\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"节点id\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"String\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"N\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"—\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"title\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"节点名称\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"String\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"N\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"—\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"open\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"节点是否展开(可以通过addAttr方法添加)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Boolean\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Y\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"false\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"checked\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"节点复选框是否选中(可以通过addAttr方法添加)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Boolean\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Y\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"false\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"visible\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"节点是否可见(可以通过addAttr方法添加)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Boolean\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Y\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"true\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"selected\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"节点是否被选中(可以通过addAttr方法添加)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Boolean\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Y\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"false\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"pid\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"节点父id(可以通过addPid方法添加)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Boolean\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Y\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"false\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"children\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"子节点\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Array[Object]\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Y\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"—\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", { staticClass: \"table table-striped table-bordered\" }, [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"事件名称\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"描述\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"参数\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"select-change\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"选中的值发生改变\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\n              \"args1:树形选中数据，完整上下级,args2:数组型选中数据，只有最底级的数据\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"node-dblclick\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"节点双击事件\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"当前节点\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", { staticClass: \"table table-striped table-bordered\" }, [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"方法名称\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"描述\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"参数\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"返回值\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"getNodes\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"通过属性查找节点\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"①查找条件②treeData(可选)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"符合条件的节点组\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"searchNodes\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"搜索,过滤treeData\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"①过滤条件②treeData(可选)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"无\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"addAttr\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"给treeData添加属性\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"①treeData②属性\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"无\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"addPid\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"给treeData添加pid\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"①treeData②根节点的pid(默认0)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"无\")])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-0d67bba6\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0d67bba6\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./docs/md/tree.md\n// module id = 649\n// module chunks = 5"],"sourceRoot":""}